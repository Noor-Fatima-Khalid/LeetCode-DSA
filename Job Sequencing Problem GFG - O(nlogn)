class Solution 
{
    public:
    static bool comp (Job a, Job b)
    {
        return a.profit > b.profit;
    }
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        sort(arr, arr + n, comp);
    
            int maxDeadline = 0;
        for (int i = 0; i < n; i++) {
            if (arr[i].dead > maxDeadline) {
                maxDeadline = arr[i].dead;
            }
        }

        vector <bool> ans(maxDeadline+1, 0);
        int maxProfit = 0, count = 0;
        for (int i = 0 ; i < n ; i++)
        {
            while (ans[arr[i].dead] != 0 && arr[i].dead > 0)
                arr[i].dead--;
            if (ans[arr[i].dead] == 0 && arr[i].dead > 0)
            {
                ans[arr[i].dead] = 1;
                count += 1;
                maxProfit += arr[i].profit;
            } 
        }
        return {count, maxProfit};
    } 
